name: Captura horaria de datos meteo

on:
  schedule:
    - cron: '5 * * * *'  # Ejecutar 5 minutos después de cada hora
  workflow_dispatch:     # Permite ejecutarlo manualmente también

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Llamar a la app Flask en Render (/update)
        run: |
          curl -s -o /dev/null -w "%{http_code}" https://test-meteoweb.onrender.com/update

      - name: Esperar unos segundos para que se genere el archivo
        run: sleep 5

      - name: Descargar CSV desde /backup-historico
        run: curl -L https://test-meteoweb.onrender.com/backup-historico -o meteo_backup.csv

      - name: Verificar que el archivo tenga datos reales
        run: |
          lineas=$(wc -l < meteo_backup.csv)
          echo "El archivo tiene $lineas línea(s)."
          if [ "$lineas" -le 1 ]; then
            echo "El archivo no contiene datos útiles. Cancelando."
            exit 1
          fi

      - name: Guardar como artefacto en GitHub
        uses: actions/upload-artifact@v3
        with:
          name: meteo-backup-${{ github.run_id }}
          path: meteo_backup.csv
